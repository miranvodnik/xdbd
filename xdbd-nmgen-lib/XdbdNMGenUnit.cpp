/*
 * XdbdNMGenUnit.cpp
 *
 *  Created on: 11. feb. 2016
 *      Author: miran
 */

#include "XdbdNMGenUnit.h"
#include <fstream>
#include <iostream>
using namespace std;

namespace xml_db_daemon
{

/*! @brief constructor of 'unit' descriptor
 *
 */
XdbdNMGenUnit::XdbdNMGenUnit ()
{
}

/*! @brief destructor of 'unit' descriptor
 *
 */
XdbdNMGenUnit::~XdbdNMGenUnit ()
{
}

/*! @brief read sub-nodes
 *
 *  since 'unit' node has no valid sub-nodes, this
 *  function only reads its attributes
 *
 *  @param node reference to XML 'unit' node
 *
 *  @return 0 always
 *
 */
int XdbdNMGenUnit::ReadSubNodes (xmlNodePtr node)
{
	ReadAttributes (node);
	return 0;
}

/*! @brief read attributes
 *
 *  'unit' node has only one attribute named 'name'
 *  its value is saved in m_name property. Other attributes,
 *  if present, are simply ignored
 *
 *  @param node reference to XML 'unit' node
 *
 *  @return 0 always
 *
 */
int XdbdNMGenUnit::ReadAttributes (xmlNodePtr node)
{
	for (xmlAttrPtr prop = node->properties; prop != 0; prop = prop->next)
	{
		string name = (char*) prop->name;
		if (name == g_name)
		{
			m_name = (char*) prop->children->content;
		}
		else
		{

		}
	}
	return 0;
}

/*! @brief generate code
 *
 *  it generates #include statement for file taken
 *  from the value of 'name' attribute
 *
 *  @param dataCount size of data[] table - should be 2
 *  @param data code generation parameters - code generation flag
 *  and reference to output file object
 *
 *  @return 0 always
 *
 */
int XdbdNMGenUnit::GenerateCode (int dataCount, void* data [])
{
	ofstream* outFile = (ofstream*) data [1];

	*outFile << "#include <" << m_name << ">" << endl;
	return 0;
}

/*! @brief check column usage
 *
 *  code generated by this node does not contain DB table
 *  names and that is why this function always fail
 *
 *  @param name name of DB column
 *
 *  @return false always
 *
 */
bool XdbdNMGenUnit::CheckColumnUsage (const char* name)
{
	return	false;
}

} /* namespace xml_db_daemon */
